[
    {
        "id": "da0c76b0dfff2c24",
        "type": "tab",
        "label": "vinicius/natan",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0badf46850cac982",
        "type": "tab",
        "label": "Cadastro",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "72adc4aeb4049e21",
        "type": "tab",
        "label": "Autenticação",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "19366abcd2f629fd",
        "type": "tab",
        "label": "lock log",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2b099cfb0f0c5a99",
        "type": "group",
        "z": "0badf46850cac982",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3",
            "check-name-db",
            "check-name-switch",
            "send-init",
            "prepare-check-name",
            "7e1d65a00c01fab6",
            "577ee9950ca95013",
            "b85d516c8bc83160",
            "f229916cad022681",
            "b19e72c62b580dfa"
        ],
        "x": 34,
        "y": 179,
        "w": 1232,
        "h": 202
    },
    {
        "id": "b6dcecac33816463",
        "type": "group",
        "z": "0badf46850cac982",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4f3a6eb1c9d27d99",
            "prepare-check-id",
            "check-id-db",
            "check-id-switch",
            "insert-user",
            "prepare-insert",
            "82ecbabf5b2f60b2",
            "2ee4ed58f6a5ab82",
            "d70965ce36f6c389",
            "021edf9ebebbabdf",
            "37fbfa483f918931",
            "f289258b1edc5f3f"
        ],
        "x": 34,
        "y": 439,
        "w": 1652,
        "h": 222
    },
    {
        "id": "c0d6f46bc10e7c39",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Biosafe",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "0f8538c6cface9c4",
        "type": "mqtt-broker",
        "name": "biosafe-esp",
        "broker": "mosquitto",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2c5836ff6dc1663f",
        "type": "ui_tab",
        "name": "Adicionar",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9813e1e93f4d47a8",
        "type": "ui_group",
        "name": "main",
        "tab": "2c5836ff6dc1663f",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b34fc89e777ec176",
        "type": "ui_tab",
        "name": "testes",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7993f396df3e3a2a",
        "type": "ui_group",
        "name": "main",
        "tab": "b34fc89e777ec176",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3ecbf5061b5e5171",
        "type": "MySQLdatabase",
        "name": "digitalStorage",
        "host": "mysql",
        "port": "3306",
        "db": "digitalStorage",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "name": "Exemplo",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "dashboard_group",
        "type": "ui_group",
        "name": "Grupo 1",
        "tab": "dashboard_tab",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "413e03bebbb1dca2",
        "type": "ui_spacer",
        "z": "da0c76b0dfff2c24",
        "name": "spacer",
        "group": "9813e1e93f4d47a8",
        "order": 4,
        "width": "1",
        "height": "1"
    },
    {
        "id": "1b4135c51fa4af2b",
        "type": "ui_spacer",
        "z": "da0c76b0dfff2c24",
        "name": "spacer",
        "group": "9813e1e93f4d47a8",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "e5b1aca28620988b",
        "type": "mqtt in",
        "z": "da0c76b0dfff2c24",
        "d": true,
        "name": "",
        "topic": "register/status",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "0f8538c6cface9c4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 300,
        "wires": [
            [
                "5e106d903ab2c52f"
            ]
        ]
    },
    {
        "id": "dfa624af76163c52",
        "type": "mqtt in",
        "z": "da0c76b0dfff2c24",
        "d": true,
        "name": "",
        "topic": "auth/init",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f8538c6cface9c4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 390,
        "y": 640,
        "wires": [
            [
                "0a75f0d8fc6cb00c"
            ]
        ]
    },
    {
        "id": "05ac62c170a6361d",
        "type": "mysql",
        "z": "da0c76b0dfff2c24",
        "mydb": "3ecbf5061b5e5171",
        "name": "imput",
        "x": 950,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "60d13150e4845ca3",
        "type": "mysql",
        "z": "da0c76b0dfff2c24",
        "mydb": "3ecbf5061b5e5171",
        "name": "",
        "x": 880,
        "y": 640,
        "wires": [
            [
                "f63a6fa0f0d03e4a",
                "8890e4522e6f7670"
            ]
        ]
    },
    {
        "id": "5e106d903ab2c52f",
        "type": "function",
        "z": "da0c76b0dfff2c24",
        "name": "checa",
        "func": "var id = msg.payload.id;\nvar status = msg.payload.status;\nvar name = msg.payload\nnode.warn(name);\n\nif (status === \"success\") {\n    node.warn(\"Status: verificando se já existe no DB...\");\n    msg.topic = \"SELECT id FROM digital_id WHERE id = '\" + id + \"';\";\n    msg.id = id;\n    return msg;\n}\n\nnode.warn(\"Status: não é sucesso\");\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 300,
        "wires": [
            [
                "94d3110fe926ce2d",
                "1e33e979c73cd706"
            ]
        ]
    },
    {
        "id": "94d3110fe926ce2d",
        "type": "debug",
        "z": "da0c76b0dfff2c24",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 380,
        "wires": []
    },
    {
        "id": "0a75f0d8fc6cb00c",
        "type": "function",
        "z": "da0c76b0dfff2c24",
        "name": "function 3",
        "func": "var id = msg.payload.id;\nvar status = msg.payload.status;\n\nif(status != \"success\") {\n    node.warn(\"status != sucesso\");\n    return null\n}\n\nif(!id) {\n    node.warn(\"id indefinido\");\n    return null;\n}\n\nmsg.topic = \"SELECT id, name FROM digital_id WHERE id = '\" + id + \"';\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 640,
        "wires": [
            [
                "60d13150e4845ca3",
                "8d56ef549cc9d544"
            ]
        ]
    },
    {
        "id": "94a73c9054c42f44",
        "type": "function",
        "z": "da0c76b0dfff2c24",
        "name": "adiciona",
        "func": "var id = msg.id;\n\nif (msg.payload.length === 0) {\n    node.warn(\"Status: ID não encontrado, salvando no DB...\");\n\n    msg.topic = \"INSERT INTO digital_id (id) VALUES ('\" + id + \"');\";\n    return msg;\n} \nelse {\n    node.warn(\"Status: ID já existente\");\n    return null;\n\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 300,
        "wires": [
            [
                "05ac62c170a6361d"
            ]
        ]
    },
    {
        "id": "1e33e979c73cd706",
        "type": "mysql",
        "z": "da0c76b0dfff2c24",
        "mydb": "3ecbf5061b5e5171",
        "name": "select",
        "x": 650,
        "y": 300,
        "wires": [
            [
                "94a73c9054c42f44"
            ]
        ]
    },
    {
        "id": "a45e20dc4bc2d252",
        "type": "ui_text_input",
        "z": "da0c76b0dfff2c24",
        "d": true,
        "name": "name",
        "label": "name",
        "tooltip": "",
        "group": "9813e1e93f4d47a8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "69c8c56afa1d167d"
            ]
        ]
    },
    {
        "id": "cd1d8fc96ba4dcc7",
        "type": "function",
        "z": "da0c76b0dfff2c24",
        "name": "function 1",
        "func": "flow.set(\"id\", msg.payload);\nreturn null; \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "59109057e894d0ca",
        "type": "debug",
        "z": "da0c76b0dfff2c24",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 200,
        "wires": []
    },
    {
        "id": "2b1532373d67006f",
        "type": "ui_text_input",
        "z": "da0c76b0dfff2c24",
        "d": true,
        "name": "id",
        "label": "",
        "tooltip": "",
        "group": "9813e1e93f4d47a8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "cd1d8fc96ba4dcc7"
            ]
        ]
    },
    {
        "id": "69c8c56afa1d167d",
        "type": "function",
        "z": "da0c76b0dfff2c24",
        "name": "function 2",
        "func": "flow.set(\"name\", msg.payload);\n\nvar name = flow.get(\"name\");\nvar id = flow.get(\"id\");\n\nif (!id || !name) {\n    node.warn(\"ID ou nome ausente\");\n    return null;\n}\n\nmsg.topic = `UPDATE digital_id SET name = '${name}' WHERE id = '${id}'`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 540,
        "wires": [
            [
                "ab08279913fafd71",
                "2d03df04ac35dd46"
            ]
        ]
    },
    {
        "id": "ab08279913fafd71",
        "type": "debug",
        "z": "da0c76b0dfff2c24",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 540,
        "wires": []
    },
    {
        "id": "2d03df04ac35dd46",
        "type": "mysql",
        "z": "da0c76b0dfff2c24",
        "mydb": "3ecbf5061b5e5171",
        "name": "imput name",
        "x": 450,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f63a6fa0f0d03e4a",
        "type": "debug",
        "z": "da0c76b0dfff2c24",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 720,
        "wires": []
    },
    {
        "id": "8d56ef549cc9d544",
        "type": "debug",
        "z": "da0c76b0dfff2c24",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 720,
        "wires": []
    },
    {
        "id": "8890e4522e6f7670",
        "type": "mqtt out",
        "z": "da0c76b0dfff2c24",
        "name": "",
        "topic": "auth/status",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f8538c6cface9c4",
        "x": 1150,
        "y": 640,
        "wires": []
    },
    {
        "id": "1",
        "type": "ui_text_input",
        "z": "0badf46850cac982",
        "name": "Input name",
        "label": "Digite o nome",
        "tooltip": "",
        "group": "dashboard_group",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "2"
            ]
        ]
    },
    {
        "id": "2",
        "type": "change",
        "z": "0badf46850cac982",
        "name": "save name the flow",
        "rules": [
            {
                "t": "set",
                "p": "nome",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "x": 340,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3",
        "type": "ui_button",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "name": "submit",
        "group": "dashboard_group",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Enviar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "prepare-check-name"
            ]
        ]
    },
    {
        "id": "4f3a6eb1c9d27d99",
        "type": "mqtt in",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "",
        "topic": "register/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f8538c6cface9c4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 600,
        "wires": [
            [
                "82ecbabf5b2f60b2"
            ]
        ]
    },
    {
        "id": "check-name-db",
        "type": "mysql",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "mydb": "3ecbf5061b5e5171",
        "name": "execute",
        "x": 460,
        "y": 280,
        "wires": [
            [
                "check-name-switch"
            ]
        ]
    },
    {
        "id": "check-name-switch",
        "type": "switch",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "name": "Name exists?",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 280,
        "wires": [
            [
                "b85d516c8bc83160"
            ],
            [
                "f229916cad022681"
            ]
        ]
    },
    {
        "id": "send-init",
        "type": "mqtt out",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "name": "MQTT Init",
        "topic": "register/init",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f8538c6cface9c4",
        "x": 1120,
        "y": 280,
        "wires": []
    },
    {
        "id": "prepare-check-name",
        "type": "function",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "name": "get name",
        "func": "let nome = flow.get('nome');\nmsg.topic = `SELECT * FROM profiles WHERE name = '${nome}'`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 280,
        "wires": [
            [
                "check-name-db",
                "7e1d65a00c01fab6"
            ]
        ]
    },
    {
        "id": "prepare-check-id",
        "type": "function",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "get fingerprint id",
        "func": "let data = msg.payload;\nlet fingerprintId = data.id;\n\nmsg.fingerprint_id = fingerprintId;\nmsg.topic = `SELECT * FROM profiles WHERE fingerprint_id = '${fingerprintId}'`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 560,
        "wires": [
            [
                "check-id-db",
                "021edf9ebebbabdf"
            ]
        ]
    },
    {
        "id": "check-id-db",
        "type": "mysql",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "mydb": "3ecbf5061b5e5171",
        "name": "execute",
        "x": 700,
        "y": 560,
        "wires": [
            [
                "check-id-switch"
            ]
        ]
    },
    {
        "id": "check-id-switch",
        "type": "switch",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "ID Exists?",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gte",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 560,
        "wires": [
            [
                "prepare-insert"
            ],
            [
                "d70965ce36f6c389"
            ]
        ]
    },
    {
        "id": "insert-user",
        "type": "mysql",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "mydb": "3ecbf5061b5e5171",
        "name": "execute",
        "x": 1240,
        "y": 520,
        "wires": [
            [
                "f289258b1edc5f3f"
            ]
        ]
    },
    {
        "id": "prepare-insert",
        "type": "function",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "Create profile",
        "func": "let nome = flow.get('nome');\nlet fingerprintId = msg.fingerprint_id;\nmsg.topic = `INSERT INTO profiles (name, fingerprint_id) VALUES ('${nome}', '${fingerprintId}')`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 520,
        "wires": [
            [
                "insert-user",
                "37fbfa483f918931"
            ]
        ]
    },
    {
        "id": "7e1d65a00c01fab6",
        "type": "debug",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "name": "sql get name",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 220,
        "wires": []
    },
    {
        "id": "577ee9950ca95013",
        "type": "debug",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "name": "msg register init",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 220,
        "wires": []
    },
    {
        "id": "b85d516c8bc83160",
        "type": "change",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "name": "set payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"msg\":\"init\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "feedback",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 240,
        "wires": [
            [
                "577ee9950ca95013",
                "send-init",
                "b19e72c62b580dfa"
            ]
        ]
    },
    {
        "id": "f229916cad022681",
        "type": "change",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "name": "set error",
        "rules": [
            {
                "t": "set",
                "p": "feedback",
                "pt": "msg",
                "to": "Nome já está em uso",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 320,
        "wires": [
            [
                "b19e72c62b580dfa"
            ]
        ]
    },
    {
        "id": "b19e72c62b580dfa",
        "type": "ui_text",
        "z": "0badf46850cac982",
        "g": "2b099cfb0f0c5a99",
        "group": "dashboard_group",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "error",
        "label": "",
        "format": "{{msg.feedback}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1110,
        "y": 340,
        "wires": []
    },
    {
        "id": "82ecbabf5b2f60b2",
        "type": "switch",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "check status",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 600,
        "wires": [
            [
                "prepare-check-id"
            ],
            [
                "d70965ce36f6c389"
            ]
        ]
    },
    {
        "id": "2ee4ed58f6a5ab82",
        "type": "ui_text",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "group": "dashboard_group",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "error",
        "label": "",
        "format": "{{msg.feedback}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1610,
        "y": 620,
        "wires": []
    },
    {
        "id": "d70965ce36f6c389",
        "type": "change",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "set error",
        "rules": [
            {
                "t": "set",
                "p": "feedback",
                "pt": "msg",
                "to": "Houve um erro, tente novamente",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 620,
        "wires": [
            [
                "2ee4ed58f6a5ab82"
            ]
        ]
    },
    {
        "id": "021edf9ebebbabdf",
        "type": "debug",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "sql get fingerprint_id",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 500,
        "wires": []
    },
    {
        "id": "37fbfa483f918931",
        "type": "debug",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "sql insert profile",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 480,
        "wires": []
    },
    {
        "id": "f289258b1edc5f3f",
        "type": "change",
        "z": "0badf46850cac982",
        "g": "b6dcecac33816463",
        "name": "reset error",
        "rules": [
            {
                "t": "set",
                "p": "feedback",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 520,
        "wires": [
            [
                "2ee4ed58f6a5ab82"
            ]
        ]
    },
    {
        "id": "1c7a37466b18f162",
        "type": "mqtt in",
        "z": "72adc4aeb4049e21",
        "name": "",
        "topic": "auth/init",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f8538c6cface9c4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "7e485c43921ad813"
            ]
        ]
    },
    {
        "id": "7e485c43921ad813",
        "type": "switch",
        "z": "72adc4aeb4049e21",
        "name": "validate status",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 240,
        "wires": [
            [
                "df7efde1fbfd9845"
            ],
            [
                "52fb2ffc914e8aef"
            ]
        ]
    },
    {
        "id": "df7efde1fbfd9845",
        "type": "function",
        "z": "72adc4aeb4049e21",
        "name": "get profile",
        "func": "let data = msg.payload;\nlet fingerprintId = data.id;\n\nmsg.fingerprint_id = fingerprintId;\nmsg.topic = `SELECT * FROM profiles WHERE fingerprint_id = '${fingerprintId}'`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "5000",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "d3adeab39a206279",
                "cdb1acba574ba36b"
            ]
        ]
    },
    {
        "id": "52fb2ffc914e8aef",
        "type": "debug",
        "z": "72adc4aeb4049e21",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 280,
        "wires": []
    },
    {
        "id": "d3adeab39a206279",
        "type": "debug",
        "z": "72adc4aeb4049e21",
        "name": "sql get profile",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 140,
        "wires": []
    },
    {
        "id": "cdb1acba574ba36b",
        "type": "mysql",
        "z": "72adc4aeb4049e21",
        "mydb": "3ecbf5061b5e5171",
        "name": "execute",
        "x": 700,
        "y": 200,
        "wires": [
            [
                "613db38b1d8d2532"
            ]
        ]
    },
    {
        "id": "78d480053a6cfa37",
        "type": "debug",
        "z": "72adc4aeb4049e21",
        "name": "user",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "data",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 140,
        "wires": []
    },
    {
        "id": "613db38b1d8d2532",
        "type": "function",
        "z": "72adc4aeb4049e21",
        "name": "mount res data",
        "func": "const user = msg.payload[0]\n\nmsg.payload = {\n    status: \"true\",\n    username: user.name,\n    userId: user.id,\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "1000",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 200,
        "wires": [
            [
                "78d480053a6cfa37",
                "8ed92123fce5d4ee"
            ]
        ]
    },
    {
        "id": "8ed92123fce5d4ee",
        "type": "mqtt out",
        "z": "72adc4aeb4049e21",
        "name": "send user data",
        "topic": "auth/status",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0f8538c6cface9c4",
        "x": 1120,
        "y": 200,
        "wires": []
    },
    {
        "id": "134a53e0b9379e46",
        "type": "mqtt in",
        "z": "19366abcd2f629fd",
        "name": "",
        "topic": "lock/status",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0f8538c6cface9c4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 220,
        "wires": [
            [
                "7a1395d426c0845b"
            ]
        ]
    },
    {
        "id": "757a651c5483b25c",
        "type": "function",
        "z": "19366abcd2f629fd",
        "name": "insert lock_logs",
        "func": "let data = msg.payload;\n\nlet state = data.state;\nlet userId = data.userId ? data.userId : null;\nlet timestamp = data.timestamp;\n\nmsg.topic = `INSERT INTO lock_logs (action, profile_id) VALUES ('${state}', '${userId}')`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "0db1291484358d22",
                "574d29669d798ba2"
            ]
        ]
    },
    {
        "id": "0db1291484358d22",
        "type": "debug",
        "z": "19366abcd2f629fd",
        "name": "sql insert lock logs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "7a1395d426c0845b",
        "type": "switch",
        "z": "19366abcd2f629fd",
        "name": "validate status",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "success",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "757a651c5483b25c"
            ],
            [
                "23eb832cde0392a4"
            ]
        ]
    },
    {
        "id": "23eb832cde0392a4",
        "type": "debug",
        "z": "19366abcd2f629fd",
        "name": "error log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 260,
        "wires": []
    },
    {
        "id": "574d29669d798ba2",
        "type": "mysql",
        "z": "19366abcd2f629fd",
        "mydb": "3ecbf5061b5e5171",
        "name": "execute",
        "x": 860,
        "y": 180,
        "wires": [
            []
        ]
    }
]